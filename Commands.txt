初始化Git仓库，使用git init命令


添加文件到Git仓库，分两步：
git add <file>	反复多次使用，添加多个文件
git commit -m <message>


要随时掌握工作区的状态，使用git status命令
如果git status告诉你有文件被修改过，用git diff可以查看修改内容


HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id
穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本
		git log --pretty=oneline 一行显示
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本


关于stage/暂存区：
git add 把更改从 工作区(Working Directory) -> 版本库(Repository)的 暂存区(Stage)
git commit 从Stage -> master，同时创建HEAD指针指向master


关于丢弃修改：
1 当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改 git checkout -- file
2 当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了1，第二步按1操作
3 已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库


删除文件 git rm <file>
恢复误删git checkout -- <file>，实际使用版本库的版本替换工作库
先手动删除文件，然后使用git rm <file>和git add<file>效果是一样的

